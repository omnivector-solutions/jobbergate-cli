name: TestBuildReleaseEdge

on: pull_request

jobs:
  test:
    name: "Lint-check & test codebase"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      # TODO: make setup python, restore cached deps, install uncached deps a single use-action
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: "os-independent pip cache dir"
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: "cache python dependencies"
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: python -m pip install --upgrade pip -e .[dev]

      ## - name: Setup tmate session
      ##   uses: mxschmitt/action-tmate@v3

      - name: "`make lint test`"
        run: make lint test

  build-snap:
    name: "Build the jobbergate-cli snap"
    runs-on: "ubuntu-18.04"
    steps:
      - uses: actions/checkout@v2

      - name: "Install Snapcraft"
        uses: samuelmeuli/action-snapcraft@v1
        with:
          use_lxd: true

      - name: "Build jobbergate-cli snap"
        run: sg lxd -c 'snapcraft --use-lxd'

      - name: "Store snap filename for later use"
        if: ${{ success() }}
        id: vars
        shell: bash
        run: |
          echo "::set-output name=snap_file::$(ls *.snap)"
          echo "::set-output name=snap_hash::${{hashFiles('*.snap')}}"

      - name: Cache built snap
        if: ${{ success() }}
        id: jobbergate-cli-snap
        uses: actions/cache@v2
        with:
          path: ${{ steps.vars.outputs.snap_file }}
          key: jobbergate-cli-${{ hashFiles('*.snap') }}

      - name: Publish a github artifact for the snap
        uses: actions/upload-artifact@v2
        with:
          name: jobbergate-cli-snap-artifact
          path: ${{ steps.vars.outputs.snap_file }}

    outputs:
      snap_file: ${{ steps.vars.outputs.snap_file }}
      snap_hash: ${{ steps.vars.outputs.snap_hash }}


  release-jobbergate-cli-snap-to-edge:
    name: "Push jobbergate-cli snap to s3"
    runs-on: "ubuntu-latest"
    needs:
      - test
      - build-snap
    steps:
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: "Restore the jobbergate-cli snap"
        uses: actions/cache@v2
        with:
          path: ${{ needs.build-snap.outputs.snap_file }}
          key: jobbergate-cli-${{ needs.build-snap.outputs.snap_hash }}

      - name: "Push snap to s3"
        shell: bash
        run: |
          aws s3 cp ${{ needs.build-snap.outputs.snap_file }} s3://omnivector-private-assets/snaps/jobbergate-cli/edge/


  notify-workflow-complete:
    name: notify
    needs: [release-jobbergate-cli-snap-to-edge]
    runs-on: "ubuntu-latest"
    steps:
      - uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
